---
title: "Salmon Biphasic model v1"
author: "Viktor Thunell" 
date: "`r format(Sys.time(), '%d %B, %Y')`"
format: 
  html:
    code-fold: true
    code-summary: "Show code"
    page-layout: full
    embed-resources: true
    toc: true
knitr: 
  opts_chunk:
    fig.align: center
    out-width: 80%
editor: source
execute: 
  echo: true
  eval: true
  cache: true
---


```{r}
# for the exponential I need to specify rate and the inverse of the mean  or a fraction of he mean concentrates mass below the mean.
ggplot() +
   stat_function(fun = dexp, args = list(rate = 1/(500)), xlim = c(0,1000))
mean(rexp(10000, rate = 1/(139/5)) < 139)




ggplot() +
   stat_function(fun = dlnorm, args = list(meanlog = k_lmean, sdlog = k_lsd), xlim = c(0,100))

ggplot() +
   stat_function(fun = dlnorm, args = list(meanlog = 1/(100), sdlog = 1), xlim = c(0,100))
ggplot() +
   stat_function(fun = dlnorm, args = list(meanlog = log(.43), sdlog = log(1.1)), xlim = c(0,100))

ggplot() +
   stat_function(fun = dnorm, args = list(mean = mean(data$length_mm), sd = 65), xlim = c(0,1000))

ggplot() +
   stat_function(fun = dnorm, args = list(mean = g_lmean, sd = g_lmean), xlim = c(0,30)) +
  


# # rgamma(1000, shape = 2, scale = 1) %>%
# #   as_tibble() %>%
# ggplot() +
#   #ggplot(aes(x= value)) +
#   #geom_density(fill = "lightblue", alpha = 0.5) +
#   stat_function(fun = dgamma, args = list(shape = 2, rate = 1), xlim = c(0,10))
# 
# # sd lower than 1 means 
# ggplot() +
#   stat_function(fun = dlnorm, args = list(meanlog = log(0.5), sdlog = 1),xlim = c(0,1)) +
#   geom_vline(xintercept = 0.5)
# 
ggplot() +
  #stat_function(fun = dlnorm, args = list(meanlog = log(100), sdlog = 10), xlim = c(0,400))
stat_function(fun = dnorm, args = list(mean = 25, sd = 5), xlim = c(-5,45))
```


```{r}
log(1)
ggplot() +
   stat_function(fun = dlnorm, args = list(meanlog = log(139), sdlog = 1), xlim = c(0,500)) +
   stat_function(fun = dlnorm, args = list(meanlog = 139, sdlog = 1), xlim = c(0,500), color = "red")

# gamma w mean = 2 makes shape = 2*rate and variance = 2/rate. With sd = 0.5, variance = 0.25, rate=8 and shape 16.
# gamma w mean = 2 makes shape = 2*rate and variance = 2/rate. With sd = 1.5, variance = 1.5^2, rate=8 and shape 16.
ggplot() +
  stat_function(fun = dgamma, args = list(shape = 25, scale = 0.1), xlim = c(0,6)) +
  geom_vline(xintercept = 2) +
  stat_function(fun = dgamma, args = list(shape = 16, rate = 8), xlim = c(0,15), color = "red")
```


```{r}
k_lsd <- sqrt(log(1 + (0.28^2) / (0.43^2))) # sqrt of variance
k_lmean <- log(0.43) - 0.5 * k_lsd^2  

set.seed(1)
draws <- rlnorm(1e5, meanlog = mean_log, sdlog = sd_log)

# quick checks
mean(draws)   # ~0.43
sd(draws)     # ~0.28
quantile(draws, c(0.025, 0.5, 0.975))

# plot density with quantiles
library(ggplot2)

q <- quantile(draws, c(0.025, 0.5, 0.975))

ggplot(data.frame(x = draws), aes(x)) +
  geom_density(fill = "skyblue", alpha = 0.4) +
  geom_vline(xintercept = q, linetype = c("dashed", "solid", "dashed"),
             color = c("red", "black", "red")) +
  labs(
    title = "Lognormal prior (mean ≈ 0.43, sd ≈ 0.28 on original scale)",
    x = "Value", y = "Density"
  ) +
  theme_minimal(base_size = 14)
```

