---
title: "Salmon data for DIASPARA WP 4.1"
author: "Viktor Thunell"
date: "`r format(Sys.time(), '%d %B, %Y')`"
format: 
  html:
    page-layout: full
    embed-resources: true
knitr: 
  opts_chunk:
    fig.align: center
    out-width: 80%
editor: source
execute: 
  echo: false
  eval: true
  cache: true
---

```{r}
#| message: false
#| warning: false
#| cache: false
#| output: false
2+2
```

## Load libraries

```{r libs}
#| message: false
#| warning: false
#| cache: false

# Load libraries, install if needed
pkgs <- c("tidyverse", "tidylog", "devtools","viridis","nls.multstart", "broom", "patchwork", "sdmTMB") 

if(length(setdiff(pkgs,rownames(installed.packages()))) > 0){
  
    install.packages(setdiff(pkgs, rownames(installed.packages())), dependencies = T)
  
  }

invisible(lapply(pkgs, library, character.only = T))

options(ggplot2.continuous.colour = "viridis")
theme_set(theme_grey()) # check why global theme option not working when rendering
devtools::source_url("https://raw.githubusercontent.com/VThunell/diasp-lht/main/R/functions/map-plot.R")

# Set path
home <- here::here()
```

## Read data

```{r}
#| message: false
#| warning: false
#| cache: false

# path_collectors <- "/Volumes/restricted$/Sötebasen//Exporter/LaxindividerSötebasen.csv"
# df <- read.csv2(path_collectors, fileEncoding="Latin1")

# Assessment units of the index rivers. We lack alot of info on AUs in the data
AU_rivers = bind_cols(river = c("Tornionjoki","Simojoki","Kalixälven","Råneälven","Piteälven","Åbyälven","Byskeälven","Rickleån","Sävarån","Vindelälven","Öreälven","Lögdeälven","Ljungan","Mörrumsån","Emån", "Kågeälven","Testeboån", "Umeälven", "Dalälven", "Luleälven"),
                      asses_unit = c(1,1,1,1,2,2,2,2,2,2,2,2,3,4,4,2,3,2,3,2), 
                      stock_origin = "wild") %>%
  bind_rows(bind_cols(river = c("Torneälven_hatchery","Luleälven_(RG_with_Pite)","Iijoki","Oulujoki","Skellefteälven","Umeälven_(RG_with_Vindel)","Ångermanälven","Indalsälven_(RG_with_Ljungan)","Ljusnan","Dalälven_(RG_with_Testeboån)", "Torneälven"), 
                      asses_unit = c(1,2,1,1,2,2,3,3,3,3,1), 
                      stock_origin = "reared"))

SU_rivers = bind_cols(river = c("Ätran","Örekilsälven","Göta älv","Lagan","Västerhavet (hela) ICES SD 20-21","Genevadsån","Fylleån","Stensån"),
                      stock_unit = "Sweden", 
                      stock_origin = NA)

# Sweden length at age
swe_sallaa <- read_delim(file = "/Users/vitl0001/Documents/Projects/DIASPARA/Incoming data/salmon/LaxindividerSötebasen.csv", delim = ";", locale = locale(encoding="latin1"), col_types = cols(Märkning2 = col_character(), Märke2Nr = col_character(), ÅlderLek3 = col_character())) %>%
  rename(age_ad = AdultÅlder,
         age_sm = SmoltÅlder,
         length = Längd,
         weight = Vikt,
         year = Årtal,
         origin = Ursprung,
         sex = Kön,
         river = VattenNamn,
         stage = Stadium
         ) %>%
  mutate(country = "SWE",
         origin = case_when(origin == "Odlad" ~ "reared",
                            origin == "Vild" ~ "wild",
                            .default = origin))
  
# REMEMBER to correct these three Columns when thy are used (Märkning2, Märke2Nr, ÅlderLek3)!

# Finnish back calculated growth
fin_sallaa <- read_delim(file = "/Users/vitl0001/Documents/Projects/DIASPARA/Incoming data/salmon/Tornionjoki_growth measurements_1970s-.txt", delim = "\t", locale = locale(encoding="latin1", decimal_mark = ",")) %>%
  rename(age_ad = 'SEA-AGE',
         age_sm = 'SMOLT AGE',
         length = LENGTH,
         weight = WEIGHT,
         year = YEAR,
         sex = SEX
         ) %>%
  mutate(country = "FIN",
         origin = NA,
         river = "Tornionjoki") #%>%
  #select(!starts_with("C")) %>% # remove back-calculated growth

# France length at age
fra_sallaa <- read_csv2(file = "/Users/vitl0001/Documents/Projects/DIASPARA/Incoming data/salmon/SAT_TailleAge_France.csv", locale = locale(encoding="latin1")) %>%
  rename(age_ad = sea_age,
         age_sm = smolt_age,
         ) %>%
  mutate(date = dmy_hm(cam_date_heure_fin, truncated = 2),
         sex = if_else(is.na('Genetic sex'), 'Sex observed in the field', 'Genetic sex'), # Assuming genetic sex is more accurate than observed and merge info to complete info 
         length = if_else(is.na(total_length), 2.804969 + 1.032038 * fork_length, total_length), # using tl to fl relationship from Samarch report on change in length and fecundity,
         year = year(date),
         river = str_to_title(sita_nom),
         origin = NA,
         country = "FRA",
         stock_unit = "France") 
  
str(swe_sallaa)
str(fin_sallaa)
str(fra_sallaa)

# Fecundity Sweden Baltic
swe_salfec <- read_csv(file = "/Users/vitl0001/Documents/Projects/DIASPARA/Incoming data/salmon/Fekunditetsdata_Dal_Ume_20241213.csv") %>%
  rename(n_eggs = 'No eggs total',
         length = 'Length (cm)',
         weight = 'Weight before stripping (kg)',
         origin = 'Wild/Reared',
         river = River,
         ) %>%
  mutate(origin = tolower(origin),
         country = "SWE",
         year = as.numeric(Year), 
         weight = weight*1000, # to grams 
         n_eggs = as.numeric(str_remove_all(n_eggs, " ")),
         length = if_else(is.na(length), NA, length*10)) %>%
  left_join(AU_rivers, by = "river") # to mm )
         

# Fecundity Sweden Göta älv 2024
swe_salfec2 <- read_csv(file = "/Users/vitl0001/Documents/Projects/DIASPARA/Incoming data/salmon/fecundity_Gotaalv_2024.csv") %>%
  rename(n_eggs = 'ROM SKATTA ANTAL (ST)',
         length = 'Längd (cm)',
         weight = 'Vikt (kg)',
         ) %>%
  mutate(origin = "reared",
         river = "Göta älv",
         country = "SWE",
         year = 2024, 
         weight = weight*1000, # to grams 
         #n_eggs = as.numeric(str_remove_all(n_eggs, " ")),
         length = length*10, # to mm )
         stock_unit = "Sweden") # stock unit

# Fecundity Finland 1996-1998
fin_salfec1 <- read_delim(file = "/Users/vitl0001/Documents/Projects/DIASPARA/Incoming data/salmon/Tornionjoki_1996-1998_fecundity.csv") %>%
  rename(n_eggs = 'TOTAL FECUNDITY (EXCL. UNCERTAIN OOZYTES)',
         length = LENGTH,
         age_sea = 'SEA-AGE',
         age_riv = 'SMOLT AGE',
         weight = WEIGTH,
         year = YEAR
        ) %>%
  mutate(country = "FIN",
         origin = case_when('ADIPOSE FIN (1=CUT, 2=INTACT)' == "2" ~ "reared",
                            'ADIPOSE FIN (1=CUT, 2=INTACT)' == "1" ~ "wild",
                            'ADIPOSE FIN (1=CUT, 2=INTACT)' == "0" ~ "uncertain",
                            .default = 'ADIPOSE FIN (1=CUT, 2=INTACT)'),
         river = "Tornionjoki",
         asses_unit = 1)

# Fecundity Finland 2006
fin_salfec2 <- read_csv(file = "/Users/vitl0001/Documents/Projects/DIASPARA/Incoming data/salmon/Tornionjoki_fecundity_2006.csv") %>%
  select(!starts_with("Sample")) %>%
  rename(age_sea = 'SEA-AGE',
         origin='ORIGIN (1=WILD 2=REARED)') %>%
  mutate(river = "Tornionjoki",
         origin = case_when(origin == "2" ~ "reared",
                            origin == "1" ~ "wild",
                            .default = NA)) %>%
  bind_rows( read_csv(file = "/Users/vitl0001/Documents/Projects/DIASPARA/Incoming data/salmon/Simojoki_fecundity_2006.csv") %>%
               select(!starts_with("Sample")) %>%
               mutate(river = "Simojoki",
                      age_sea = NA,
                      origin = NA) ) %>%
  rename(length = 'LENGTH (mm)',
         n_eggs = 'number eggs') %>%
  mutate(year = 2006,
         country = "FIN",
         asses_unit = 1)

# Fecundity France
fra_salfec <- read_csv(file = "/Users/vitl0001/Documents/Projects/DIASPARA/Incoming data/salmon/Fecondite_SAT_Bilan.csv") %>%
  rename(n_eggs = Fecondite,
         length_f = Lf,
         length_t = Lt,
         weight = Poids,
         year = Annee,
         age_sea = Age_mer,
         age_riv = Age_riviere,
         river = Origine,
         ) %>%
  mutate(country = "FRA",
         origin = NA,
         stock_unit = "France")

str(swe_salfec)
str(swe_salfec2)
str(fin_salfec1)
str(fin_salfec2)
str(fra_salfec)

fra_sallaa %>%
  filter(!is.na(`Genetic sex`)) %>%
  distinct(sita_nom)
# Hwo to get regiosn in the french laa data?
# fra_sallaa %>%
#   distinct(river)
# unique(fra_sallaa$river) %in% unique(fra_salfec$river)
# fra_sallaa %>%
#   mutate(river = str_to_title(river)) %>%
#   distinct(river) %>%
#   left_join(fra_salfec %>% distinct(river, Region), by = "river")

```

## Individual fecundity

```{r}
# swe_salfec %>%
#   drop_na(length, n_eggs) %>%
#   dplyr::select("river", "country", "origin", "year", "n_eggs") %>%
#   bind_rows(fin_salfec_1 %>% 
#               drop_na(length, n_eggs) %>%
#               dplyr::select("river","country", "origin", "year", "n_eggs")) %>%
#   bind_rows(fin_salfec_2 %>% 
#               drop_na(length, n_eggs) %>%
#               dplyr::select("river","country", "origin", "year", "n_eggs")) %>%
#   bind_rows(fra_salfec %>% 
#               mutate(length = if_else(is.na(length_t), 2.804969 + 1.032038 * length_f, length_t)) %>%
#               drop_na(length, n_eggs) %>%
#               dplyr::select("river","country", "origin", "year", "n_eggs") ) %>%
#   summarise(count = n(), .by = c(year, country, origin)) |>
#   ggplot() +
#   geom_bar(aes(year, count, fill = country), alpha = 1, stat="identity", position = "stack") +
#   theme_minimal() +
#   labs(y = "# individuals", title = "Fecundity")

# Combine the data
all_salfec <- swe_salfec %>%
  drop_na(length, n_eggs) %>%
  dplyr::select("length", "river", "country", "origin", "year", "n_eggs","asses_unit") %>%
  bind_rows(swe_salfec2 %>% 
              drop_na(length, n_eggs) %>%
              dplyr::select("length", "river", "country", "origin", "year", "n_eggs","stock_unit")) %>%
  bind_rows(fin_salfec1 %>% 
              drop_na(length, n_eggs) %>%
              dplyr::select("length", "river", "country", "origin", "year", "n_eggs", "asses_unit")) %>%
  bind_rows(fin_salfec2 %>% 
              drop_na(length, n_eggs) %>%
              dplyr::select("length", "river", "country", "origin", "year", "n_eggs", "asses_unit")) %>%
  bind_rows(fra_salfec %>% 
              mutate(length = if_else(is.na(length_t), 2.804969 + 1.032038 * length_f, length_t)) %>%
              drop_na(length, n_eggs) %>%
              dplyr::select("length", "river", "country", "origin", "year", "n_eggs","stock_unit"))

```

## Map and temporal summary of fecundity

```{r}
# add coordinates to rivers missing those
all_salfec2 <- all_salfec %>% 
  mutate( lat = case_when(river == "Umeälven" ~ 63.728428,
                          river == "Dalälven" ~ 60.635716, 
                          river %in% c("Tornionjoki", "Muonionjoki") ~ 65.879905,
                          river == "Simojoki" ~ 65.625639,
                          river == "Garonne" ~ 45.005921, 
                          river == "Dordogne" ~ 44.998734,
                          river == "Oir" ~ 48.646895,
                          river == "Élorn" ~ 48.417280,
                          river == "Douron" ~ 48.656185,
                          river == "Goyen" ~ 48.027447,
                          river == "Finistere" ~ 48.306467, 
                          river == "Odet" ~ 47.962738,
                          river == "Penze" ~ 48.643562,
                          river == "Aven" ~ 47.842906,
                          river == "Elle" ~ 47.876111,
                          river == "Arques" ~ 49.930103,
                          river == "Bresle" ~ 50.061661,
                          river == "Göta älv" ~ 58.269585,
                          .default = NA),
          lon = case_when(river == "Umeälven" ~ 20.335386,
                          river == "Dalälven" ~ 17.443188,
                          river %in% c("Tornionjoki", "Muonionjoki") ~ 24.136424,
                          river == "Simojoki" ~ 25.052169,
                          river == "Garonne" ~ -0.574534,
                          river == "Dordogne" ~ -0.475130,
                          river == "Oir" ~ -1.380787,
                          river == "Élorn" ~ -4.314318,
                          river == "Douron" ~  -3.659550,
                          river == "Goyen" ~ -4.533051,
                          river == "Finistere" ~ -4.080223,
                          river == "Odet" ~ -4.100464,
                          river == "Penze" ~ -3.950601,
                          river == "Aven" ~  -3.748738,
                          river == "Elle" ~ -3.536609,
                          river == "Arques" ~ 1.085561,
                          river == "Bresle" ~ 1.374828,
                          river == "Göta älv" ~ 12.271385,
                          .default = NA))

plot_map_Euro +
  geom_point(data = all_salfec2 %>% drop_na(lat,lon) %>% add_utm_columns(ll_names = c("lon", "lat"), utm_crs = 32633), aes(X*1000, Y*1000), size = 0.1, color = "deeppink3") 

coun <- ifelse(all_salfec2$country == "FRA", "red",
               ifelse(all_salfec2$country == "SWE", "green","blue"))

all_salfec2 %>%
  mutate(River = paste0(country,":",river)) %>%
  drop_na(river) %>%
  #dplyr::select("river","country", "origin", "year", "n_eggs")  %>%
  summarise(count = n(), .by = c(year, country, origin, River)) %>%
  mutate(Ind.count = as.factor(ifelse(count > 50, ">50",
                                  ifelse(count > 30 & count <= 50, ">30",
                                         ifelse(count > 10 & count <= 30, ">10",
                                         "<10")))),
         Ind.count = fct_reorder(Ind.count, count)) %>% 
  ggplot(aes(year, River, fill = Ind.count, group = country)) +
  geom_tile(color = "gray30") +
  scale_fill_viridis_d() +
  theme_light()

```

## Length at age of returning salmon

```{r}
# Combine the data
all_sallaa <- swe_sallaa %>%
  drop_na(length) %>%
  filter(Åldersprov == "Ja") %>%
  dplyr::select("WGS84_E_Vatten", "WGS84_N_Vatten","length", "river", "country", "origin", "year", "AU") %>%
  rename(lon = WGS84_E_Vatten, lat = WGS84_N_Vatten) %>%
  left_join(SU_rivers, by = "river") %>%
  bind_rows(fin_sallaa %>% 
              dplyr::select("length", "river", "country", "origin", "year", "length") %>%
              mutate(#river = case_when(grepl("Tornio", river) ~ "Tornionjoki",
                     #                 grepl("Muonion", river) ~ "Muonionjoki"),
                     lat = 65.879905,
                     lon = 24.136424)) %>%
  bind_rows(fra_sallaa %>%  # Awaiting French data
              mutate(length = if_else(is.na(total_length), 2.804969 + 1.032038 * fork_length, total_length)) %>%
              drop_na(age_sm,age_sm,length) %>%
              dplyr::select("river","country", "origin", "year","stock_unit") ) %>%
  left_join(AU_rivers, by = "river") %>% # creates AU. x and y as there exists some AU info in swe_sallaa (the sötebasen database)
  mutate(asses_unit = if_else(is.na(AU), asses_unit, AU)) # prefer the existing AU before the new one.


```

## Map and temporal summary of length at age returning salmon

```{r}
plot_map_Nord +
  geom_point(data = all_sallaa %>%
               drop_na(lon, lat) %>% 
               mutate(n.years = n_distinct(year), .by=river) %>%
               mutate(Year.count = ifelse(n.years > 14, ">15","<15")) %>%
               add_utm_columns(ll_names = c("lon", "lat"), utm_crs = 32633), 
             aes(X*1000, Y*1000, color = Year.count), size = 0.5, show.legend = TRUE) +
  theme_sleek(base_size = 6) +
  guides(colour = guide_legend(title.position = "top", title.hjust = 0.5),
         fill = guide_legend(title.position = "top", title.hjust = 0.5))

# ind counts by river
all_sallaa %>%
  mutate(River = paste0(country,":",river)) %>%
  drop_na(river) %>%
  #dplyr::select("river","country", "origin", "year", "n_eggs")  %>%
  summarise(count = n(), .by = c(year, country, River)) %>%
  mutate(Ind.count = as.factor(ifelse(count > 50, ">50",
                                  ifelse(count > 30 & count <= 50, ">30",
                                         ifelse(count > 10 & count <= 30, ">10",
                                         "<10")))),
         Ind.count = fct_reorder(Ind.count, count)) %>% 
  ggplot(aes(year, River, fill = Ind.count, group = country)) +
  geom_tile(color = "gray30") +
  scale_fill_viridis_d() +
  theme_light()

# ind counts by assessment unit
all_sallaa %>%
  drop_na(river) %>%
  filter(!is.na(asses_unit)) %>%
  summarise(count = n(), .by = c(year, asses_unit)) %>%
  mutate(Ind.count = as.factor(ifelse(count > 50, ">50",
                                  ifelse(count > 30 & count <= 50, ">30",
                                         ifelse(count > 10 & count <= 30, ">10",
                                         "<10")))),
         Ind.count = fct_reorder(Ind.count, count)) %>% 
  ggplot(aes(year, asses_unit, fill = Ind.count)) +
  geom_tile(color = "gray30") +
  scale_fill_viridis_d() +
  theme_light()

# ind counts by stock unit
all_sallaa %>%
  drop_na(river) %>%
  filter(!is.na(stock_unit)) %>%
  summarise(count = n(), .by = c(year, stock_unit)) %>%
  mutate(Ind.count = as.factor(ifelse(count > 50, ">50",
                                  ifelse(count > 30 & count <= 50, ">30",
                                         ifelse(count > 10 & count <= 30, ">10",
                                         "<10")))),
         Ind.count = fct_reorder(Ind.count, count)) %>% 
  ggplot(aes(year, stock_unit, fill = Ind.count)) +
  geom_tile(color = "gray30") +
  scale_fill_viridis_d() +
  theme_light()


all_sallaa %>%
  mutate(River = paste0(country,":",river)) %>%
  drop_na(river) %>%
  summarise(n.years = n_distinct(year), .by=river) %>%
  filter(n.years > 14)

all_sallaa %>%
  filter(is.na(asses_unit),
         country != "FRA") %>%
  distinct(river)
  

```

## One river in the Swedish and Fininsh length at age data for salmon has 15 consecutive years of data (Mörrumsån, southern Baltic Sea)
