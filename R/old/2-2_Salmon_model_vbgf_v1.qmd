---
title: "Salmon VBGF model v1" 
author: "Viktor Thunell" 
date: "`r format(Sys.time(), '%d %B, %Y')`"
format: 
  html:
    code-fold: true
    code-summary: "Show code"
    page-layout: full
    embed-resources: true
knitr: 
  opts_chunk:
    fig.align: center
    out-width: 80%
editor: source
execute: 
  echo: true
  eval: true
  cache: true
---

## Load libraries
```{r libs}
#| message: false
#| warning: false
#| cache: false

# Load libraries, install if needed
pkgs <- c("tidyverse", "tidylog", "devtools","viridis","nls.multstart", "broom", "patchwork", "rjags", "coda", "boot", "tidybayes","bayesplot")

if(length(setdiff(pkgs,rownames(installed.packages()))) > 0){
    install.packages(setdiff(pkgs, rownames(installed.packages())), dependencies = T)
  }

invisible(lapply(pkgs, library, character.only = T))

options(ggplot2.continuous.colour = "viridis")
theme_set(theme_light()) # check why global theme option not working when rendering
# Set path

home <- here::here()
```

## Read data
```{r}
#| message: false
#| warning: false
#| cache: false

sallaa <- readRDS(file = paste0(home,"/data/data-for-2-2/salmon-laa_2025-04-11.RData")) %>%
  #filter out non-aged individuals (~34000 individuals)
  filter(!(is.na(age.sea) & is.na(age.sm))) %>% 
  rowwise() %>% # rowwise needed for non vectorised function like sum
  # create life stage and total age columns
  mutate(age.type = case_when(age.sea == 0 | is.na(age.sea) ~ "smolt.only",
                               age.sea > 0 & age.sm > 0 ~ "both",
                               age.sm == 0 | is.na(age.sm) ~ "sea.only",
                               .default = NA),
    #mutate(age.type = if_else(age.sea == 0 | is.na(age.sea), "smolt", "sea"),
         age.tot = sum(age.sea,age.sm, na.rm = TRUE)) %>%
  ungroup()

sallaa %>%
  ggplot(aes(age.tot, length, color = age.type)) +
  geom_point() +
  facet_wrap(~age.type)
```

The smolt.only group contains alot of questionable data, i.e. too long fish for being young smolts. Maybe these should be sea age instead

How many are these fish and where do they come from...
```{r}
sallaa %>%
  filter(age.type == "smolt.only",
         length > 250) %>%
  ggplot(aes(age.tot, length, color = country)) +
  geom_point() +
  facet_wrap(~age.type)

# this is about 160 individuals
sallaa %>%
  filter(age.type == "smolt.only",
         length > 250) %>%
  count()

# if we remove these, the counts per age.type are:
sallaa %>%
  filter(!(age.type == "smolt.only" & length > 250)) %>%
  count(age.type)

# The "smolt.only" comes almost exclusively from Sweden (and some from Finland).
sallaa %>% 
  filter(age.type == "smolt.only") %>%
  count(country)

```

For now I will use the "both" type only.
```{r}
# Create a new dataset and reduce number of obs to make models faster
sallaa2 <- sallaa %>%
  filter(age.type == "both") %>% 
  slice_sample(n = 15000)

sallaa2 %>%
  drop_na(sex) %>%
  ggplot(aes(age.tot, length, color = sex)) +
  geom_point() +
  facet_wrap(~sex) +
  scale_x_continuous(breaks = seq(0, 13, 1) )

# how old can a salmon get? Is 12 possible or have smolt age been included in sea age?
sallaa2 %>%
  filter(age.tot > 10)
```

# Hists of age and length
```{r}

# If dropping all inds where both sea and sm age is NA 
sallaa2 %>% 
  ggplot() +
  geom_histogram(aes(x = age.tot)) +
  
sallaa2 %>% 
  ggplot() +
  geom_histogram(aes(x = length)) +
  
sallaa2 %>% 
  ggplot() +
  geom_histogram(aes(x = length)) +
  facet_wrap(~age.tot, scales = "free")
```


# Model

$$Y_i~ \sim Normal(\mu_i, \tau)$$
$$\mu_i ~  \sim L_{inf}*(1-e^{-k*(age_{i}-t_0)})$$
$$\tau = 1/\sigma^2$$
$$\sigma \sim gamma(0.01, 0.01)$$
$$k \sim Normal(0.01, 0.01)$$
## 1. Overall vbgf parameters (using formulation with the t0 parameter)

### a. Basic 
```{r}

vbgf_model_1 <- "model{
  # Likelihood model
    
  for(i in 1:nobs){
    
    length[i] ~ dnorm(mu[i], tau)
    
    mu[i] <- Linf*(1-exp(-k*(age.tot[i]-t0)))
    #mu[i] <- Linf*(1-exp(-k*age.tot[i]))
    }
  
  # Prior for Linf, k and sigma
  
  tau <- 1/sig^2
  sig ~ dgamma(0.01, 0.01)
  k ~ dnorm(0.01, 0.01)
  t0 ~ dnorm(0, 0.01)
  Linf ~ dnorm(0, 0.001)

}"

sallaa.samp <- sallaa2
data = c(sallaa.samp %>% select(age.tot, length, spat.unit) %>% as.list(), 
         list(nobs = nrow(sallaa.samp)))
line_inits <- list(list("k" = 2, "Linf"= 700, "t0" = -0.01),
                   list("k" = 0.5, "Linf"= 1200, "t0" = -10))

# Build the model    
vbgf_jags <- jags.model(textConnection(vbgf_model_1), 
    data = data,
    n.chains = 2,
    inits = line_inits
    )
    # inits = list( # hashed to use generated itis by jags () "JAGS user manual V 4.3.0 (section 3.3.1) states that "the value selected by the function is usually the mean, median or mode of the distribution of the stochastic node (https://nandinidendukuri.com/blogposts/2023-10-12-initial-values-in-rjags/)"
  
# mcmc burn-in
burn.in=20000
update(vbgf_jags, n.iter=burn.in)

# produce more samples and a mcmc.list object
iters=10000
n.thin=1
samples = coda.samples(vbgf_jags, 
                       variable.names = c("Linf","k", "t0"),
                       n.iter = iters,
                       thin = n.thin)

# summarise and look at the mcmc trace
summary(samples)
mcmc_trace(samples)

gather_draws(samples, c(k,Linf,t0)) %>% 
  filter(.chain == 1) %>%
  ggplot() + 
  geom_density(aes(x = .value, color = factor(.variable))) + # age parameter i
  facet_wrap(~.variable, scales = "free") +
  theme_light() 

vgbf_pars <- tidy_draws(samples, c(k,Linf,t0)) %>% 
  median_qi()

preds <- data.frame(age = seq(0,13, by = 0.1)) %>%
  mutate(length = vgbf_pars$Linf*(1-exp(-vgbf_pars$k*age)),
         length.up = vgbf_pars$Linf.upper*(1-exp(-vgbf_pars$k.upper*age)),
         length.lo = vgbf_pars$Linf.lower*(1-exp(-vgbf_pars$k.lower*age)))
  
preds %>%
  ggplot() +
  geom_line(aes(x = age, y = length)) +
  geom_ribbon(aes(x = age,y = length, ymin = length.lo, ymax = length.up), alpha = .2, fill = "red") +
 geom_point(data = sallaa.samp, aes(age.tot, length)) +
  scale_x_continuous(breaks = seq(0, 13, 1) )

```

### b. Multivariate normal prior for Linf, k and t0

```{r}

vbgf_model_1b <- "model{
  # Likelihood 
    
  for(i in 1:nobs){
    
    length[i] ~ dnorm(mu[i], tau)
    
    mu[i] <- kl[1]*(1-exp(-kl[2]*(age.tot[i]-kl[3])))
    #mu[i] <- kl[1]*(1-exp(-kl[2]*age.tot[i])) # without t0 theres a bit less problems with mixing and conv.
    
    }
  
  # Priors as in Pilling et al. 2002 except they use an inverse Wishart prior for the dmnorm precison matrix
  
  tau <- 1/sig^2
  sig ~ dgamma(0.01, 0.01)
  kl[1:npars] ~ dmnorm( mukl[1:npars], pmkl[1:npars, 1:npars] )
  
  mukl[1:npars] ~ dmnorm(mumu[1:npars], pmmu[1:npars, 1:npars]) 
  pmkl[1:npars, 1:npars] ~ dwish(Omega[1:npars, 1:npars], npars)
  
  mumu[1:npars] <- c(0,0,0) 
  pmmu[1,1:3] <- c(1/.02,0,0)  #?? inverse of variance = 0.02 = 200 (cf Pilling)
  pmmu[2,1:3] <- c(0,1/.02,0)  #?? ... 
  pmmu[3,1:3] <- c(0,0,1/.02)  #?? ...
  Omega[1,1:3] <- c(1/.01,0,0) # same here
  Omega[2,1:3] <- c(0,1/.02,0)
  Omega[3,1:3] <- c(0,0,1/.01)

}"

# from jags manual:
#"For the multivariate normal, the conjugate prior is the Wishart distribution on the precision matrix (inverse of the variance-covariance matrix). ...nobody has an intuitive understanding of what a prior distribution on the precision means". The choice of parameters shape and rate or R and df can be difficult.
#rwishart(df = 2, Sigma = diag(1/.01, 3, 3))

sallaa.samp <- sallaa2
data = c(sallaa.samp %>% select(age.tot, length) %>% as.list(), 
         list(nobs = nrow(sallaa.samp), 
              npars = 3))
line_inits <- list(list("kl" = c(1000,0.2,-2)),
                   list("kl" = c(1000,0.2,-2)))
# Build the model    
vbgf_jags_1b <- jags.model(textConnection(vbgf_model_1b), 
    data = data,
    n.adapt = 5000,
    n.chains = 2,
    inits = line_inits
    )
  
vbgf_jags_1b$state() # check initial values are the ones I set
# mcmc burn-in
burn.in=50000
update(vbgf_jags_1b, n.iter=burn.in)

# produce more samples and a mcmc.list object
iters=40000
n.thin=5
samples_1b = coda.samples(vbgf_jags_1b, 
                       variable.names = c("kl"),
                       n.iter = iters,
                       thin = n.thin)

# summarise and look at the mcmc trace
summary(samples_1b)
mcmc_trace(samples_1b)

gather_draws(samples_1b, kl[1:3]) %>%
  rename(var = "1:3") %>%
  ggplot() + 
  geom_density(aes(x = .value, color = factor(var))) + # age parameter i
  facet_wrap(~var, scales = "free") +
  theme_light() 

vgbf_pars <- tidy_draws(samples_1b) %>% 
  median_qi()

preds <- data.frame(age = seq(0,13, by = 0.1)) %>%
  mutate(length = vgbf_pars$"kl[1]"*(1-exp(-vgbf_pars$"kl[2]"*(age-vgbf_pars$"kl[3]"))),
         length.up = vgbf_pars$"kl[1].upper"*(1-exp(-vgbf_pars$"kl[2].upper"*(age-vgbf_pars$"kl[3]"))),
         length.lo = vgbf_pars$"kl[1].lower"*(1-exp(-vgbf_pars$"kl[2].lower"*(age-vgbf_pars$"kl[3]"))))
  
preds %>%
  ggplot() +
  geom_line(aes(x = age, y = length)) +
  geom_ribbon(aes(x = age,y = length, ymin = length.lo, ymax = length.up), alpha = .2, fill = "red") +
 geom_point(data = sallaa.samp, aes(age.tot, length)) +
  scale_x_continuous(breaks = seq(0, 13, 1) )

```


## 2. Sex dependent growth paramters

### a. Sex as predictor

```{r}

vbgf_model_2a <- "model{
  
  # Likelihood model
    
  for(i in 1:nobs){
    
    length[i] ~ dnorm(mu[i], tau)
    
    #mu[i] <- (Linf + b1*sex[i])*(1-exp(-k + b2*sex[i])*age.tot[i])
    
    mu[i] <- Linf[i]*(1-exp(-k[i]*age.tot[i]))
    Linf[i] <- a1 + b1*sex[i]
    k[i] <- a2 + b2*sex[i]
    
  }

    # Priors
    #Linf ~ dnorm(0, 0.01)
    #k ~ dnorm(0, 0.01)
    tau <- 1/sig^2
    sig ~ dgamma(0.01, 0.01)
    a1 ~ dnorm(0, 0.01)
    b1 ~ dnorm(0, 0.01)
    a2 ~ dnorm(0, 0.01)
    b2 ~ dnorm(0, 0.01)
    
}"

sallaa.samp <- sallaa2 %>%
  drop_na(sex) %>%
  mutate(sex = as.factor(sex))
data = c(sallaa.samp %>% select(age.tot, length, sex) %>% as.list(), 
         list(nobs = nrow(sallaa.samp)))
line_inits <- list(list("a1" = 1000, "a2" = .2, "b1" = 100, "b2" = .01), 
                   list("a1" = 1000, "a2" = .2, "b1" = 100, "b2" = .01))

# Build the model
vbgf_jags_2a <- jags.model(textConnection(vbgf_model_2a), 
    data = data,
    n.chains = 2,
    inits = line_inits
    )

# mcmc burn-in
burn.in=10000
update(vbgf_jags_2a, n.iter=burn.in)

# produce more samples and a mcmc.list object
iters=20000
n.thin=1
samples = coda.samples(vbgf_jags_2a, 
                       variable.names = c("a1","a2","b1", "b2"),
                       n.iter = iters,
                       thin = n.thin)

# summarise and look at mcmc trace
summary(samples) 
mcmc_trace(samples)
# not great, correlated. Effective sample size is low:
effectiveSize(samples) # increased samples from 10K to 30K but thats far from enough. Other means of fixing this... Using this for now as this model is not what will be used.

# the posteriors looks reasonable  
samples %>%
  gather_draws(a1, b1, a2, b2) %>% 
  ggplot() + 
  geom_density(aes(x = .value)) +
  facet_wrap(~.variable, scales = "free") +
  theme_light() 

preds <-
  samples %>%
  spread_draws(a1, b1, a2, b2) %>% 
  median_qi() %>%
  expand_grid(age = seq(0,12, by = 0.1), sex = c("f", "m")) %>%
  mutate(length = if_else(sex == "m", (a1*(1-exp(-a2*age))),
                          ((a1 + b1)*(1-exp(-(a2 + b2)*age)))),
         length.upp = if_else(sex == "m", (a1.upper*(1-exp(-a2.upper*age))),
                             ((a1.upper + b1.upper)*(1-exp(-(a2.upper + b2.upper)*age)))),
         length.low = if_else(sex == "m", (a1.lower*(1-exp(-a2.lower*age))),
                             ((a1.lower + b1.lower)*(1-exp(-(a2.lower + b2.lower)*age))))) 
 
# the credibility interval is too narrow to see
preds %>%
  ggplot() +
  geom_line(aes(x = age, y = length, color = sex)) +
  geom_point(data = sallaa.samp, aes(age.tot, length, fill = sex), alpha = 0.5, size = 0.6) +
  geom_ribbon(aes(x = age,y = length, ymin = length.low, ymax = length.upp, color = sex), alpha = .5) 

```

### b. Sex hierarchical 

Note this one does not use t0 and converges and mixing is good
```{r}

vbgf_model_2b <- "model{
    
  for(i in 1:nobs){
    
    length[i] ~ dnorm(mu[i], tau)
    
    mu[i] <- Linf[sex[i]]*(1-exp(-k[sex[i]]*age.tot[i]))
    
    }
    
    for(j in 1:nosex){
    
    Linf[j] ~ dnorm(mu.li, tau.li)
    k[j] ~ dnorm(mu.k, tau.k)
    
    }
    
    # Priors
    tau <- 1/sig.k^2
    sig ~ dunif(0, 2)
    
    # Hyperpriors
    mu.li ~ dnorm(0, 0.001)
    sig.li ~ dgamma(0.01, 0.01)
    tau.li <- 1/sig.li^2
    mu.k ~ dnorm(0, 0.001)
    sig.k ~ dunif(0, 2)
    tau.k <- 1/sig.k^2
    
}"

sallaa.samp <- sallaa2 %>% 
  drop_na(sex, age.tot) %>%
  mutate(sex = as.factor(sex),
         age.sea = as.factor(age.tot))
data = c(sallaa.samp %>% select(age.tot, length, sex) %>% as.list(), 
         list(nobs = nrow(sallaa.samp), 
              nosex = length(unique(sallaa.samp$sex)), 
              noage = length(unique(sallaa.samp$age.tot))))
line_inits <- list(list("mu.k" = 2, "mu.li"= 500), # jags rng:s inits for the other params
                   list("mu.k" = 0.5, "mu.li"= 1500))

# Build the model
vbgf_jags_2b <- jags.model(textConnection(vbgf_model_2b), 
    data = data,
    n.chains = 2,
    inits = line_inits
    )

# mcmc burn-in
burn.in=10000
update(vbgf_jags_2b, n.iter=burn.in)

# produce more samples and a mcmc.list object
iters=5000
n.thin=1
samples_2b = coda.samples(vbgf_jags_2b, 
                       variable.names = c("k", "Linf","sig"),
                       n.iter = iters,
                       thin = n.thin)

# summarise and look at the mcmc trace
summary(samples_2b) 
mcmc_trace(samples_2b)

samples_2b %>%
  gather_draws(k[j], Linf[j]) %>% 
  mutate(sex = if_else(j == 1, "f", "m")) %>%
  ggplot() + 
  geom_density(aes(x = .value, color = factor(sex))) + # age parameter i
  facet_wrap(sex~.variable, scales = "free") +
  theme_light() 

preds <- samples_2b %>%
  spread_draws(k[j], Linf[j]) %>% 
  median_hdi() %>%
  left_join(expand_grid(age.tot = seq(0,13, by = 0.1), sex = unique(sallaa.samp$sex)) %>%
              mutate(j = rep(1:2, 131)), by = "j") %>% # f=1
  mutate(length = Linf*(1-exp(-k*age.tot)), 
         length.up = Linf.upper*(1-exp(-k.upper*age.tot)), 
         length.low = Linf.lower*(1-exp(-k.lower*age.tot)), 
         .by = sex)

preds %>%
  ggplot() +
  geom_line(aes(x = age.tot, y = length, color = sex)) +
  geom_ribbon(aes(x = age.tot, y = length, ymin = length.low, ymax = length.low, color = sex), alpha = 0.1) +
  geom_point(data = sallaa.samp, aes(age.tot, length, color = factor(sex)), alpha = 0.5, size = 0.6)

```

### c. Multivariate normal prior for Linf, k and t0

The model ala Pilling et al. 2002 in which they obtain vbgf parameters using a nonlinear random effects model which reduces the variance in the estimates of the parameters.

```{r}

vbgf_model_2c <- "model{
  # Likelihood
    
  for(i in 1:nobs){
    
    length[i] ~ dnorm(mu[i], tau)
    
    mu[i] <- kl[sex[i],1]*(1-exp(-kl[sex[i],2]*(age.tot[i]-kl[sex[i],3])))
    
    }
  
  for(j in 1:nosex){
    
    kl[j, 1:npars] ~ dmnorm( mukl[1:npars], pmkl[1:npars, 1:npars] )
        
    }  
    
  # Priors as in Pilling et al. 2002 except they use an inverse Wishart prior for the dmnorm precison matrix
  
  tau <- 1/sig^2
  sig ~ dgamma(0.01, 0.01)
  
  mukl[1:npars] ~ dmnorm( mumu[1:npars], pmmu[1:npars, 1:npars] )
  pmkl[1:npars, 1:npars] ~ dwish( Omega[1:npars, 1:npars], npars )

  mumu[1:npars] <- c(0,0,0) 
  pmmu[1,1:3] <- c(1/.02,0,0)  #?? inverse of variance = 0.02 = 200 (cf Pilling)
  pmmu[2,1:3] <- c(0,1/.02,0)  #?? ... 
  pmmu[3,1:3] <- c(0,0,1/.02)  #?? ...
  Omega[1,1:3] <- c(1/.01,0,0) # same here
  Omega[2,1:3] <- c(0,1/.02,0)
  Omega[3,1:3] <- c(0,0,1/.01)
  
}"

# from jags manual:
#"For the multivariate normal, the conjugate prior is the Wishart distribution on the precision matrix (inverse of the variance-covariance matrix). ...nobody has an intuitive understanding of what a prior distribution on the precision means". The choice of parameters shape and rate or R and df can be difficult.
#rwishart(df = 2, Sigma = diag(1/.01, 3, 3))

sallaa.samp <- sallaa2 %>% 
  mutate(sex = as.factor(sex)) %>%
  drop_na(sex)
  
data = c(sallaa.samp %>% select(age.tot, length, sex) %>% as.list(), 
         list(nobs = nrow(sallaa.samp), 
              nosex = 2, 
              npars = 3))
line_inits <- list(list("mukl" = c(1000,0.2,-2)),
                   list("mukl" = c(1000,0.2,-2)))
# Build the model    
vbgf_jags_2c <- jags.model(textConnection(vbgf_model_2c), 
    data = data,
    n.adapt = 10000,
    n.chains = 2,
    inits = line_inits
    )
  
vbgf_jags_2c$state() # check initial values are the ones I set
# mcmc burn-in
burn.in=50000
update(vbgf_jags_2c, n.iter=burn.in)

# produce more samples and a mcmc.list object
iters=40000
n.thin=5
samples_2c = coda.samples(vbgf_jags_2c, 
                       variable.names = c("kl"),
                       n.iter = iters,
                       thin = n.thin)

# summarise and look at the mcmc trace
summary(samples_2c)
mcmc_trace(samples_2c)

samples_2c %>%
  gather_draws(kl[sex,par]) %>%
  ggplot() + 
  geom_density(aes(x = .value, color = factor(par))) + # age parameter i
  facet_wrap(sex~par, scales = "free") +
  theme_light() 

preds <- samples_2c %>%
  spread_draws(kl[sex,par]) %>% 
  median_qi() %>%
  left_join(expand_grid(par = as.integer(c(1:3)), sex = as.integer(c(1,2)), age.tot = seq(0,12, by = 0.1)), by = c("sex", "par")) %>%
  pivot_wider(id_cols = c("sex", "age.tot"), names_from = par, values_from = c(.lower, .upper, kl)) %>%
  mutate(length = kl_1*(1-exp(-kl_2*(age.tot-kl_3))), 
         length.up = .upper_1*(1-exp(-.upper_2*(age.tot-.upper_3))), 
         length.low = .lower_1*(1-exp(-.lower_2*(age.tot-.lower_3))), 
         .by = sex) %>%
  mutate(sex = if_else(sex == 1, "f", "m"))
  
preds %>%
  ggplot() +
  geom_line(aes(x = age.tot, y = length, color = factor(sex))) +
  geom_ribbon(aes(x = age.tot, y = length, ymin = length.low, ymax = length.up, fill = factor(sex)), alpha = .2) +
 geom_point(data = sallaa.samp, aes(age.tot, length, color = sex), alpha = 0.2) +
  scale_x_continuous(breaks = seq(0, 12, 1) )

```



## 3. Sex and spatial unit hierarchical

### a. Sex and spatial unit hierarchical

```{r}

vbgf_model_3a <- "model{
  # Likelihood model
    
  for(i in 1:nobs){
    
    length[i] ~ dnorm(mu[i], tau)
    
    mu[i] <- Linf[spat.unit[i], sex[i]]*(1-exp(-k[spat.unit[i], sex[i]]*(age.tot[i] - t0[spat.unit[i], sex[i]])))
    
    }
    
    for(j in 1:nosu){
      for(m in 1:nosex){
      
      Linf[j,m] ~ dnorm(mu.li, tau.li)
      k[j,m] ~ dnorm(mu.k, tau.k)
      t0[j,m] ~ dnorm(mu.t0, tau.t0)
    
      }
    }
    
    # Priors
    tau <- 1/sig^2
    sig ~ dunif(0, 150)
    
    # Hyper priors
    mu.li ~ dnorm(0, 0.001)
    sig.li ~ dgamma(0.01,0.01)
    tau.li <- 1/sig.li^2
    mu.k ~ dnorm(0, 0.001)
    sig.k ~ dgamma(0.01,0.01)
    tau.k <- 1/sig.k^2
    mu.t0 ~ dnorm(0, 0.001)
    sig.t0 ~ dgamma(0.01,0.01)
    tau.t0 <- 1/sig.t0^2
    
}"

sallaa.samp <- sallaa2 %>%
  drop_na(sex) %>%
  mutate(spat.unit = as.factor(spat.unit),
         sex = as.factor(sex))
data = c(sallaa.samp %>% select(age.tot, length, spat.unit, sex) %>% as.list(), 
         list(nobs = nrow(sallaa.samp), nosu = length(unique(sallaa.samp$spat.unit)), nosex = length(unique(sallaa.samp$sex))))
line_inits <- list(list("mu.k" = 2, "mu.li"= 700, "mu.t0" = -0.01),
                   list("mu.k" = 0.5, "mu.li"= 1200, "mu.t0" = -10))

# Build the model
vbgf_jags_3a <- jags.model(textConnection(vbgf_model_3a), 
    data = data,
    n.chains = 2,
    inits = line_inits
    )
    # inits = list( # hashed to use generated itis by jags () "JAGS user manual V 4.3.0 (section 3.3.1) says that "the value selected by the function is usually the mean, median or mode of the distribution of the stochastic node (https://nandinidendukuri.com/blogposts/2023-10-12-initial-values-in-rjags/)"

# mcmc burn-in
burn.in=40000
update(vbgf_jags_3a, n.iter=burn.in)

# produce more samples and a mcmc.list object
iters=50000
n.thin=1
samples_3a = coda.samples(vbgf_jags_3a, 
                       variable.names = c("k", "Linf", "t0"),
                       n.iter = iters,
                       thin = n.thin)

# summarise the mcmc trace
summary(samples_3a) 
mcmc_trace(samples_3a)
unique(sallaa.samp$spat.unit)

effectiveSize(effectiveSize(samples_3a))

samples_3a %>%
  gather_draws(k[j,m], Linf[j,m]) %>% 
  ggplot() + 
  geom_density(aes(x = .value, color = factor(j))) + # age parameter i
  facet_wrap(m~.variable, scales = "free") +
  theme_light() 

preds <- samples_3a %>%
  spread_draws(k[unit,sex], Linf[unit,sex], t0[unit,sex]) %>% 
  median_qi() %>%
  left_join(expand_grid(sex = as.integer(c("1","2")), age = seq(0,12, by = 0.1), unit = as.integer(c(1:11))), by = c("unit", "sex")) %>%
  mutate(length = Linf*(1-exp(-k*(age-t0))),
         length.up = Linf.upper*(1-exp(-k.upper*(age-t0.upper))),
         length.lo = Linf.lower*(1-exp(-k.lower*(age-t0.lower))), .by = unit) %>%
  mutate(sex = if_else(sex == 1, "f", "m"))

preds %>%
  ggplot() +
  geom_line(aes(x = age, y = length, color = sex)) +
  geom_ribbon(aes(x = age,y = length, ymin = length.lo, ymax = length.up, fill = sex), alpha = .2) +
  facet_wrap(~unit)

```

### b. Multivariate normal prior for Linf, k and t0

The model ala Pilling et al. 2002 in which they obtain vbgf parameters using a nonlinear random effects model which reduces the variance in the estimates of the parameters.

```{r}

vbgf_model_3b <- "model{
  # Likelihood
    
  for(i in 1:nobs){
    
    length[i] ~ dnorm(mu[i], tau)
    
    mu[i] <- kl[spat.unit[i],sex[i],1]*(1-exp(-kl[spat.unit[i],sex[i],2]*(age.tot[i]-kl[spat.unit[i],sex[i],3])))
    
    }
  
  for(j in 1:nosex){
    for(m in 1:nosu){
    
    kl[m, j, 1:npars] ~ dmnorm( mukl[1:npars], pmkl[1:npars, 1:npars] )
        
    }  
  }
    
  # Priors as in Pilling et al. 2002 except they use an inverse Wishart prior for the dmnorm precison matrix
  
  tau <- 1/sig^2
  sig ~ dgamma(0.01, 0.01)
  
  mukl[1:npars] ~ dmnorm( mumu[1:npars], pmmu[1:npars, 1:npars] )
  pmkl[1:npars, 1:npars] ~ dwish( Omega[1:npars, 1:npars], npars )

  mumu[1:npars] <- c(0,0,0) 
  pmmu[1,1:3] <- c(1/.02,0,0)  #?? inverse of variance = 0.02 = 200 (cf Pilling)
  pmmu[2,1:3] <- c(0,1/.02,0)  #?? ... 
  pmmu[3,1:3] <- c(0,0,1/.02)  #?? ...
  Omega[1,1:3] <- c(1/.01,0,0) # same here
  Omega[2,1:3] <- c(0,1/.02,0)
  Omega[3,1:3] <- c(0,0,1/.01)
  
}"

sallaa.samp <- sallaa %>% 
  drop_na(sex) %>%
  mutate(spat.unit = as.factor(spat.unit),
         sex = as.factor(sex))

no.spat.units <- length(unique(sallaa.samp$spat.unit))
data = c(sallaa.samp %>% select(age.tot, length, spat.unit, sex) %>% as.list(), 
         list(nobs = nrow(sallaa.samp), nosu = no.spat.units, nosex = 2, npars = 3))
line_inits <- list(list("mukl" = c(1000,0.2,-2)),
                   list("mukl" = c(900,0.2,-0.1)))

# Build the model
vbgf_jags_3b <- jags.model(textConnection(vbgf_model_3b), 
    data = data,
    n.chains = 2,
    n.adapt = 20000, # adaptation incomplete even with 20000
    inits = line_inits
    )
# Cant initialize this model: "adaptation incomplete"

#mcmc burn-in
burn.in=100000
update(vbgf_jags_3b, n.iter=burn.in)

# produce more samples and a mcmc.list object
iters=50000
n.thin=10
samples_3b = coda.samples(vbgf_jags_3b,
                       variable.names = c("kl"),
                       n.iter = iters,
                       thin = n.thin)

# # summarise and look at the mcmc trace
summary(samples_3b)
mcmc_trace(samples_3b)

samples_3b %>%
  gather_draws(kl[su, sex, par]) %>%
  ggplot() + 
  geom_density(aes(x = .value, color = factor(sex))) + # age parameter i
  facet_wrap(sex~su, scales = "free") +
  theme_light()

preds <- samples_3b %>%
  spread_draws(kl[su,sex, par]) %>% 
  median_qi() %>%
  left_join(expand_grid(sex = as.integer(c("1","2")), age = seq(0,12, by = 0.1), su = as.integer(c(1:11))), by = c("su", "sex")) %>%
  pivot_wider(id_cols = c("sex", "su", "age"), names_from = par, values_from = c(.lower, .upper, kl)) %>%
  mutate(length = kl_1*(1-exp(-kl_2*(age-kl_3))), 
         length.up = .upper_1*(1-exp(-.upper_2*(age-.upper_3))), 
         length.low = .lower_1*(1-exp(-.lower_2*(age-.lower_3))), 
         .by = c("sex", "su")) %>%
  mutate(sex = if_else(sex == 1, "f", "m"))
  
preds %>%
  ggplot() +
  geom_line(aes(x = age, y = length, color = sex)) +
  geom_ribbon(aes(x = age,y = length, ymin = length.low, ymax = length.up, fill = sex), alpha = .2) +
  facet_wrap(~su)
```
