---
title: "Salmon data Finland and Sweden"
author: "Viktor Thunell"
date: "`r format(Sys.time(), '%d %B, %Y')`"
format: 
  html:
    page-layout: full
    embed-resources: true
knitr: 
  opts_chunk:
    fig.align: center
    out-width: 80%
editor: source
execute: 
  echo: false
  eval: true
  cache: true
---

## Load libraries

```{r libs}
#| message: false
#| warning: false
#| cache: false

# Load libraries, install if needed
pkgs <- c("tidyverse", "tidylog", "devtools","viridis","nls.multstart", "broom", "patchwork", "sdmTMB") 

if(length(setdiff(pkgs,rownames(installed.packages()))) > 0){
  
    install.packages(setdiff(pkgs, rownames(installed.packages())), dependencies = T)
  
  }

invisible(lapply(pkgs, library, character.only = T))

options(ggplot2.continuous.colour = "viridis")
theme_set(theme_grey()) # check why global theme option not working when rendering
devtools::source_url("https://raw.githubusercontent.com/VThunell/diasp-lht/main/R/functions/map-plot.R")

# Set path
home <- here::here()

# To ssh://github.com/VThunell/cod-rpw.git
# git remote set-url origin git@github.com:VThunell/diasp-lht.git
```


## Read data

```{r}
#| message: false
#| warning: false
#| cache: false

# path_collectors <- "/Volumes/restricted$/Sötebasen//Exporter/LaxindividerSötebasen.csv"
# df <- read.csv2(path_collectors, fileEncoding="Latin1")
 
# Swedish length at age
swe_sallaa <- read_delim(file = "/Users/vitl0001/Documents/Projects/DIASPARA/Incoming data/salmon/LaxindividerSötebasen.csv", locale = locale(encoding="latin1"), delim = ";", col_types = cols(Märkning2 = col_character(), Märke2Nr = col_character(), ÅlderLek3 = col_character())) %>%
  rename(age_ad = AdultÅlder,
         age_sm = SmoltÅlder,
         length = Längd,
         weight = Vikt,
         year = Årtal,
         origin = Ursprung,
         sex = Kön,
         river = VattenNamn,
         stage = Stadium
         ) %>%
  mutate(country = "SWE",
         origin = case_when(origin == "Odlad" ~ "reared",
                            origin == "Vild" ~ "wild",
                            .default = origin))

# REMEMBER TO CORRECT THESE THREE Columns if used!!

# Finnish length at age
fin_sallaa <- read_delim(file = "/Users/vitl0001/Documents/Projects/DIASPARA/Incoming data/salmon/Tornionjoki_growth measurements_1970s-.txt", delim = "\t", locale = locale(encoding="latin1", decimal_mark = ",")) %>%
  rename(age_ad = 'SEA-AGE',
         age_sm = 'SMOLT AGE',
         length = LENGTH,
         weight = WEIGHT,
         year = YEAR,
         sex = SEX,
         river = RIVER
         ) %>%
  mutate(country = "FIN",
         origin = NA)

str(swe_sallaa)
str(fin_sallaa)

# Fecundity Sweden
swe_salfec <- read_delim(file = "/Users/vitl0001/Documents/Projects/DIASPARA/Incoming data/salmon/Fekunditetsdata_Dal_Ume_20241213.csv", delim = ";", locale = locale(encoding="latin1")) %>%
  rename(#age_ad = AdultÅlder,
         #age_sm = SmoltÅlder,
         n_eggs = 'No eggs total',
         length = 'Length (cm)',
         weight = 'Weight before stripping (kg)',
         origin = 'Wild/Reared',
         river = River,
         ) %>%
  mutate(country = "SWE",
         year = as.factor(Year), 
         weight = weight*1000) %>% # to grams 
  mutate(river = case_when(river == "Ume\u008alven" ~ "Umeälven",
                           river == "Dal\u008alven" ~ "Dalälven",
                           .default = river))

# Fecundity Finland
fin_salfec <- read_delim(file = "/Users/vitl0001/Documents/Projects/DIASPARA/Incoming data/salmon/Fecunditydata_Tornionjoki.csv", delim = ";", locale = locale(encoding="latin1")) %>%
  rename(#age_ad = AdultÅlder,
         n_eggs = 'Number of eggs',
         length = 'Lenght, mm',
         age_sea = 'Sea-age',
         weight = 'Weight, g'
         ) %>%
  mutate(country = "FIN",
         origin = NA,
         river = "Tornionjoki",
         year = "97/98",
         length = if_else(is.na(length), NA, length/10)) # to cm

str(swe_salfec)
str(fin_salfec)

```

# Length at age 

## Table Finnish and Swedish Length at age data, with and without removing NAs
```{r}
#| echo: true

# swe_sallaa %>%
#   drop_na(age_ad,
#           length) %>%
#   filter(is.na(origin)) %>%
#   distinct(river)

swe_sallaa %>%
  drop_na(length) %>%
  filter(Åldersprov == "Ja") %>%
  dplyr::select("river", "country", "origin", "year") %>%
  bind_rows(fin_sallaa %>% 
              drop_na(age_sm,age_sm,length) %>%
              dplyr::select("river","country", "origin", "year") ) %>%
  summarise(count = n(), .by = c(country, origin))

swe_sallaa %>%
  dplyr::select("river", "country", "origin", "year") %>%
  bind_rows(fin_sallaa %>% 
              drop_na(age_sm,age_sm,length) %>%
              dplyr::select("river","country", "origin", "year") ) %>%
  summarise(count = n(), .by = c(country, origin))

```
### 62% of observations removed because of NA in mainly age abur also some length. All Finnish individuals are from Torne river which is not regulated, i.e the fish should mostly be wild (ask Atso). Both adult and smolt age not always present in Swedish data. 

## N obs Length age by year

```{r}

swe_sallaa %>%
  drop_na(length) %>%
  filter(Åldersprov == "Ja") %>%
  dplyr::select("river", "country", "origin", "year") %>%
  bind_rows(fin_sallaa %>% 
              drop_na(length) %>%
              filter(!is.na(age_sm) & !is.na(age_ad)) %>%
              dplyr::select("river","country", "origin", "year") ) %>%
  summarise(count = n(), .by = c(year, country, origin)) |>
  ggplot() +
  geom_bar(aes(year, count, fill = country), alpha = 1, stat="identity", position = "stack") +
  theme_minimal() +
  labs(y = "# individuals", title = "Length at age")

```
### Figure. N obs Length age by year

## N obs by river map

```{r}
#| out-width: 200%

# swe_sallaa %>%
#     dplyr::select("RT90_X_Vatten","RT90_Y_Vatten","S99TM_N_Vatten", "S99TM_E_Vatten", "WGS84_N_Vatten", "WGS84_E_Vatten", "RT90_X_Plats", "RT90_Y_Plats", "S99TM_N_Plats","S99TM_E_Plats","WGS84_N_Plats") %>%
#   distinct()
#   names(swe_sallaa)
# Transform our map into UTM 33 coordinates, which is the equal-area projection we fit in:
# utm_zone33 <- 32633
# euro_map_proj <- sf::st_transform(euro_map, crs = utm_zone33)

# swe_sallaa %>%
#   filter(river %in% c("Västerhavet (hela) ICES SD 20-21", "Östersjön (hela) ICES SD 22-32")) %>%
#   distinct(Plats)

plot_map_Nord +
  geom_point(data = swe_sallaa %>%
               drop_na(WGS84_E_Vatten, WGS84_N_Vatten) %>% 
               add_utm_columns(ll_names = c("WGS84_E_Vatten", "WGS84_N_Vatten"), utm_crs = 32633),
             aes(X*1000, Y*1000), size = 0.5, color = "deeppink3") +
  geom_text(data = swe_sallaa %>%
              drop_na(WGS84_E_Vatten, WGS84_N_Vatten) %>%
              add_utm_columns(ll_names = c("WGS84_E_Vatten", "WGS84_N_Vatten"), utm_crs = 32633) %>% 
              mutate(n=n(), .by = c(WGS84_E_Vatten, WGS84_N_Vatten)), 
            aes(X*1000, Y*1000, label = n),hjust=0, vjust=0, size = 2) +
  theme_sleek(base_size = 6)
  
```
### Figure. Length at age: Number of individuals in the Swedish data by river (not catch place). The Finnish data is only from Torne River (which borders Sweden to the east).


## N obs Length age by river

```{r}

swe_sallaa %>%
  drop_na(length) %>%
  filter(Åldersprov == "Ja") %>%
  dplyr::select("river", "country", "origin", "year") %>%
  bind_rows(fin_sallaa %>% 
              drop_na(length) %>%
              filter(!is.na(age_sm) & !is.na(age_ad)) %>%
              dplyr::select("river","country", "origin", "year") ) %>%
  mutate(level = if_else(n() > 1500, "many ind.", "few ind."), .by = river) %>%
  summarise(count = n(), .by = c(river, country, origin, level)) %>%
  mutate(river2 = paste(country,":",river)) %>%
  ggplot() +
  geom_bar(aes(river2, count, fill = origin), alpha = 1, stat="identity", position = "stack") +
  theme_minimal() +
  facet_wrap(~level, scales = "free") +
  labs(title = "Length at age", y = "# individuals") +
  guides(x = guide_axis(angle = 90))

```
### Figure. N obs Length age by year. Split into groups of many and few individuals sampled. A small set of rivers dominate observations (but these are spread across Sweden). Östersjön (hela) och Västerhavet (hela) are at sea but all have a more detailed catch place which we can get coordinates for. 

## Table Finnish and Swedish Fecundity data
```{r}
#| echo: true

swe_salfec %>%
  drop_na(weight,length) %>%
  dplyr::select("river", "country", "origin", "year") %>%
  bind_rows(fin_salfec %>% 
              drop_na(weight,length) %>%
              dplyr::select("river","country", "origin", "year") ) %>%
  summarise(count = n(), .by = c(country, origin))


```
### (few Finnish weight and length NAs). Mostly reared (opposite of length at age). 


## N obs Fecundity by year

```{r}

swe_salfec %>%
  drop_na(weight,length) %>%
  dplyr::select("river", "country", "origin", "year") %>%
  bind_rows(fin_salfec %>% 
              drop_na(weight,length) %>%
              dplyr::select("river","country", "origin", "year") ) %>%
  summarise(count = n(), .by = c(year, country, origin)) |>
  ggplot() +
  geom_bar(aes(year, count, fill = country), alpha = 1, stat="identity", position = "stack") +
  theme_minimal() +
  labs(y = "# individuals", title = "Fecundity")

```
### Figure. N obs Fecundity by length by year

## N obs Fecundity by river

```{r}

swe_salfec %>%
  drop_na(weight,length) %>%
  dplyr::select("river", "country", "origin", "year") %>%
  bind_rows(fin_salfec %>% 
              drop_na(weight,length) %>%
              dplyr::select("river","country", "origin", "year") ) %>%
  summarise(count = n(), .by = c(river, country, origin)) %>%
  ggplot() +
  geom_bar(aes(river, count, fill = origin), alpha = 1, stat="identity", position = "stack") +
  theme_light() +
  labs(title = "Fecundity", y = "# individuals")

```
### Figure. N obs Fecundity by length by year. Fecundity measures mostly from rivers with compensatory rearing. 

### Finnish fecundity data also have age!


## True fecundity in Swedish data. Mean and sd of percent loss (%still in body cavity after stripping the roe, measured through dissection)

```{r}

swe_salfec %>%
  drop_na(weight,length) %>%
  rename(perc_loss = 'Perc. loss per ind.') %>%
  summarise(mean_truefec = mean(perc_loss, na.rm = TRUE), sd_truefec = sd(perc_loss, na.rm = TRUE))

```